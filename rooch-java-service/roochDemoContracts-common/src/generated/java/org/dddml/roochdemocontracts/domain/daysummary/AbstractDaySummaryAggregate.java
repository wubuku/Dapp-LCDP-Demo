// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.roochdemocontracts.domain.daysummary;

import java.util.*;
import org.dddml.roochdemocontracts.domain.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.roochdemocontracts.specialization.*;

public abstract class AbstractDaySummaryAggregate extends AbstractAggregate implements DaySummaryAggregate {
    private DaySummaryState.MutableDaySummaryState state;

    private List<Event> changes = new ArrayList<Event>();

    public AbstractDaySummaryAggregate(DaySummaryState state) {
        this.state = (DaySummaryState.MutableDaySummaryState)state;
    }

    public DaySummaryState getState() {
        return this.state;
    }

    public List<Event> getChanges() {
        return this.changes;
    }

    public void throwOnInvalidStateTransition(Command c) {
        DaySummaryCommand.throwOnInvalidStateTransition(this.state, c);
    }

    protected void apply(Event e) {
        onApplying(e);
        state.mutate(e);
        changes.add(e);
    }


    ////////////////////////

    public static class SimpleDaySummaryAggregate extends AbstractDaySummaryAggregate {
        public SimpleDaySummaryAggregate(DaySummaryState state) {
            super(state);
        }

        @Override
        public void create(String description, String metaData, String[] arrayData, String optionalData, Integer[] u16ArrayData, Long[] u32ArrayData, BigInteger[] u64ArrayData, BigInteger[] u128ArrayData, BigInteger[] u256ArrayData, Long offChainVersion, String commandId, String requesterId, DaySummaryCommands.Create c) {
            try {
                verifyCreate(description, metaData, arrayData, optionalData, u16ArrayData, u32ArrayData, u64ArrayData, u128ArrayData, u256ArrayData, c);
            } catch (Exception ex) {
                throw new DomainError("VerificationFailed", ex);
            }

            Event e = newDaySummaryCreated(description, metaData, arrayData, optionalData, u16ArrayData, u32ArrayData, u64ArrayData, u128ArrayData, u256ArrayData, offChainVersion, commandId, requesterId);
            apply(e);
        }

        @Override
        public void delete(Long offChainVersion, String commandId, String requesterId, DaySummaryCommands.Delete c) {
            try {
                verifyDelete(c);
            } catch (Exception ex) {
                throw new DomainError("VerificationFailed", ex);
            }

            Event e = newDaySummaryDeleted(offChainVersion, commandId, requesterId);
            apply(e);
        }

        protected void verifyCreate(String description, String metaData, String[] arrayData, String optionalData, Integer[] u16ArrayData, Long[] u32ArrayData, BigInteger[] u64ArrayData, BigInteger[] u128ArrayData, BigInteger[] u256ArrayData, DaySummaryCommands.Create c) {
            String Description = description;
            String MetaData = metaData;
            String[] ArrayData = arrayData;
            String OptionalData = optionalData;
            Integer[] U16ArrayData = u16ArrayData;
            Long[] U32ArrayData = u32ArrayData;
            BigInteger[] U64ArrayData = u64ArrayData;
            BigInteger[] U128ArrayData = u128ArrayData;
            BigInteger[] U256ArrayData = u256ArrayData;

            ReflectUtils.invokeStaticMethod(
                    "org.dddml.roochdemocontracts.domain.daysummary.CreateLogic",
                    "verify",
                    new Class[]{DaySummaryState.class, String.class, String.class, String[].class, String.class, Integer[].class, Long[].class, BigInteger[].class, BigInteger[].class, BigInteger[].class, VerificationContext.class},
                    new Object[]{getState(), description, metaData, arrayData, optionalData, u16ArrayData, u32ArrayData, u64ArrayData, u128ArrayData, u256ArrayData, VerificationContext.forCommand(c)}
            );

//package org.dddml.roochdemocontracts.domain.daysummary;
//
//public class CreateLogic {
//    public static void verify(DaySummaryState daySummaryState, String description, String metaData, String[] arrayData, String optionalData, Integer[] u16ArrayData, Long[] u32ArrayData, BigInteger[] u64ArrayData, BigInteger[] u128ArrayData, BigInteger[] u256ArrayData, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected void verifyDelete(DaySummaryCommands.Delete c) {

            ReflectUtils.invokeStaticMethod(
                    "org.dddml.roochdemocontracts.domain.daysummary.DeleteLogic",
                    "verify",
                    new Class[]{DaySummaryState.class, VerificationContext.class},
                    new Object[]{getState(), VerificationContext.forCommand(c)}
            );

//package org.dddml.roochdemocontracts.domain.daysummary;
//
//public class DeleteLogic {
//    public static void verify(DaySummaryState daySummaryState, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected AbstractDaySummaryEvent.DaySummaryCreated newDaySummaryCreated(String description, String metaData, String[] arrayData, String optionalData, Integer[] u16ArrayData, Long[] u32ArrayData, BigInteger[] u64ArrayData, BigInteger[] u128ArrayData, BigInteger[] u256ArrayData, Long offChainVersion, String commandId, String requesterId) {
            DaySummaryEventId eventId = new DaySummaryEventId(getState().getDay(), null);
            AbstractDaySummaryEvent.DaySummaryCreated e = new AbstractDaySummaryEvent.DaySummaryCreated();

            e.setDescription(description);
            e.setMetaData(metaData);
            e.setArrayData(arrayData);
            e.setOptionalData(optionalData);
            e.setU16ArrayData(u16ArrayData);
            e.setU32ArrayData(u32ArrayData);
            e.setU64ArrayData(u64ArrayData);
            e.setU128ArrayData(u128ArrayData);
            e.setU256ArrayData(u256ArrayData);
            e.setRoochEventId(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochSender(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochTxHash(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochTypeTag(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochTimestampMs(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochBlockHeight(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochEventIndex(null); // todo Need to update 'verify' method to return event properties.
            e.setStatus(null); // todo Need to update 'verify' method to return event properties.

            e.setCommandId(commandId);
            e.setCreatedBy(requesterId);
            e.setCreatedAt((java.util.Date)ApplicationContext.current.getTimestampService().now(java.util.Date.class));

            e.setDaySummaryEventId(eventId);
            return e;
        }

        protected AbstractDaySummaryEvent.DaySummaryDeleted newDaySummaryDeleted(Long offChainVersion, String commandId, String requesterId) {
            DaySummaryEventId eventId = new DaySummaryEventId(getState().getDay(), null);
            AbstractDaySummaryEvent.DaySummaryDeleted e = new AbstractDaySummaryEvent.DaySummaryDeleted();

            e.setRoochEventId(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochSender(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochTxHash(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochTypeTag(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochTimestampMs(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochBlockHeight(null); // todo Need to update 'verify' method to return event properties.
            e.setRoochEventIndex(null); // todo Need to update 'verify' method to return event properties.
            e.setStatus(null); // todo Need to update 'verify' method to return event properties.

            e.setCommandId(commandId);
            e.setCreatedBy(requesterId);
            e.setCreatedAt((java.util.Date)ApplicationContext.current.getTimestampService().now(java.util.Date.class));

            e.setDaySummaryEventId(eventId);
            return e;
        }

    }

}

