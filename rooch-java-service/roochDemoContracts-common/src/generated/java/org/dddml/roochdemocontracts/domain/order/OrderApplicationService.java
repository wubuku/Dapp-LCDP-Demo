// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.roochdemocontracts.domain.order;

import java.util.Map;
import java.util.List;
import org.dddml.support.criterion.Criterion;
import java.math.BigInteger;
import org.dddml.roochdemocontracts.domain.*;
import java.util.Date;
import org.dddml.roochdemocontracts.specialization.Event;
import org.dddml.roochdemocontracts.domain.Command;

public interface OrderApplicationService {
    void when(OrderCommands.Create c);

    void when(OrderCommands.RemoveItem c);

    void when(OrderCommands.UpdateItemQuantity c);

    void when(OrderCommands.UpdateEstimatedShipDate c);

    void when(OrderCommands.AddOrderShipGroup c);

    void when(OrderCommands.AddOrderItemShipGroupAssocSubitem c);

    void when(OrderCommands.CancelOrderShipGroupQuantity c);

    void when(OrderCommands.RemoveOrderShipGroupItem c);

    OrderState get(String id);

    Iterable<OrderState> getAll(Integer firstResult, Integer maxResults);

    Iterable<OrderState> get(Iterable<Map.Entry<String, Object>> filter, List<String> orders, Integer firstResult, Integer maxResults);

    Iterable<OrderState> get(Criterion filter, List<String> orders, Integer firstResult, Integer maxResults);

    Iterable<OrderState> getByProperty(String propertyName, Object propertyValue, List<String> orders, Integer firstResult, Integer maxResults);

    long getCount(Iterable<Map.Entry<String, Object>> filter);

    long getCount(Criterion filter);

    OrderEvent getEvent(String orderId, long version);

    OrderState getHistoryState(String orderId, long version);

    OrderItemState getOrderItem(String orderId, String productObjectId);

    Iterable<OrderItemState> getOrderItems(String orderId, Criterion filter, List<String> orders);

    OrderShipGroupState getOrderShipGroup(String orderId, Integer shipGroupSeqId);

    Iterable<OrderShipGroupState> getOrderShipGroups(String orderId, Criterion filter, List<String> orders);

    OrderItemShipGroupAssociationState getOrderItemShipGroupAssociation(String orderId, Integer orderShipGroupShipGroupSeqId, String productObjId);

    Iterable<OrderItemShipGroupAssociationState> getOrderItemShipGroupAssociations(String orderId, Integer orderShipGroupShipGroupSeqId, Criterion filter, List<String> orders);

    OrderItemShipGroupAssocSubitemState getOrderItemShipGroupAssocSubitem(String orderId, Integer orderShipGroupShipGroupSeqId, String orderItemShipGroupAssociationProductObjId, Day orderItemShipGroupAssocSubitemDay);

    Iterable<OrderItemShipGroupAssocSubitemState> getOrderItemShipGroupAssocSubitems(String orderId, Integer orderShipGroupShipGroupSeqId, String orderItemShipGroupAssociationProductObjId, Criterion filter, List<String> orders);

}

