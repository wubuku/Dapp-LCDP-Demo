// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.roochdemocontracts.domain;

import java.io.Serializable;
import java.math.BigInteger;
import org.dddml.roochdemocontracts.domain.*;

public class RoochEventId implements Serializable {
    private String eventHandleId;

    public String getEventHandleId()
    {
        return this.eventHandleId;
    }

    public void setEventHandleId(String eventHandleId)
    {
        this.eventHandleId = eventHandleId;
    }

    private BigInteger eventSeq;

    public BigInteger getEventSeq()
    {
        return this.eventSeq;
    }

    public void setEventSeq(BigInteger eventSeq)
    {
        this.eventSeq = eventSeq;
    }

    public RoochEventId()
    {
    }

    public RoochEventId(String eventHandleId, BigInteger eventSeq)
    {
        this.eventHandleId = eventHandleId;
        this.eventSeq = eventSeq;
    }

    @Override
    public boolean equals(Object obj)
    {
        if (obj == this) {
            return true;
        }
        if (obj == null || obj.getClass() != this.getClass()) {
            return false;
        }

        RoochEventId other = (RoochEventId)obj;
        return true 
            && (eventHandleId == other.eventHandleId || (eventHandleId != null && eventHandleId.equals(other.eventHandleId)))
            && (eventSeq == other.eventSeq || (eventSeq != null && eventSeq.equals(other.eventSeq)))
            ;
    }

    @Override
    public int hashCode()
    {
        int hash = 0;
        if (this.eventHandleId != null) {
            hash += 13 * this.eventHandleId.hashCode();
        }
        if (this.eventSeq != null) {
            hash += 13 * this.eventSeq.hashCode();
        }
        return hash;
    }

    @Override
    public String toString() {
        return "RoochEventId{" +
                "eventHandleId='" + eventHandleId + '\'' +
                ", eventSeq=" + eventSeq +
                '}';
    }
}

