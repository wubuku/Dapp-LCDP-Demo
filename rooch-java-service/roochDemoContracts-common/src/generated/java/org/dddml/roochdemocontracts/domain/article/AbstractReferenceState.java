// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.roochdemocontracts.domain.article;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.util.Date;
import org.dddml.roochdemocontracts.domain.*;
import org.dddml.roochdemocontracts.specialization.*;
import org.dddml.roochdemocontracts.domain.article.ReferenceEvent.*;

public abstract class AbstractReferenceState implements ReferenceState.SqlReferenceState {

    private ArticleReferenceId articleReferenceId = new ArticleReferenceId();

    public ArticleReferenceId getArticleReferenceId() {
        return this.articleReferenceId;
    }

    public void setArticleReferenceId(ArticleReferenceId articleReferenceId) {
        this.articleReferenceId = articleReferenceId;
    }

    private transient ArticleState articleState;

    public ArticleState getArticleState() {
        return articleState;
    }

    public void setArticleState(ArticleState s) {
        articleState = s;
    }
    
    private ArticleState protectedArticleState;

    protected ArticleState getProtectedArticleState() {
        return protectedArticleState;
    }

    protected void setProtectedArticleState(ArticleState protectedArticleState) {
        this.protectedArticleState = protectedArticleState;
    }

    public String getArticleId() {
        return this.getArticleReferenceId().getArticleId();
    }
        
    public void setArticleId(String articleId) {
        this.getArticleReferenceId().setArticleId(articleId);
    }

    public BigInteger getReferenceNumber() {
        return this.getArticleReferenceId().getReferenceNumber();
    }
        
    public void setReferenceNumber(BigInteger referenceNumber) {
        this.getArticleReferenceId().setReferenceNumber(referenceNumber);
    }

    private String title;

    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    private String author;

    public String getAuthor() {
        return this.author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    private BigInteger publicationYear;

    public BigInteger getPublicationYear() {
        return this.publicationYear;
    }

    public void setPublicationYear(BigInteger publicationYear) {
        this.publicationYear = publicationYear;
    }

    private String publisher;

    public String getPublisher() {
        return this.publisher;
    }

    public void setPublisher(String publisher) {
        this.publisher = publisher;
    }

    private String doi;

    public String getDoi() {
        return this.doi;
    }

    public void setDoi(String doi) {
        this.doi = doi;
    }

    private String url;

    public String getUrl() {
        return this.url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    private BigInteger pageNumber;

    public BigInteger getPageNumber() {
        return this.pageNumber;
    }

    public void setPageNumber(BigInteger pageNumber) {
        this.pageNumber = pageNumber;
    }

    private Long offChainVersion;

    public Long getOffChainVersion() {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion) {
        this.offChainVersion = offChainVersion;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private Date createdAt;

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private Date updatedAt;

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    private Boolean active;

    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    private Boolean deleted;

    public Boolean getDeleted() {
        return this.deleted;
    }

    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public boolean isStateUnsaved() {
        return this.getOffChainVersion() == null;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }


    public AbstractReferenceState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
    }

    @Override
    public int hashCode() {
        return getReferenceNumber().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof ReferenceState) {
            return Objects.equals(this.getReferenceNumber(), ((ReferenceState)obj).getReferenceNumber());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (false) { 
            ;
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    protected void merge(ReferenceState s) {
        if (s == this) {
            return;
        }
        this.setTitle(s.getTitle());
        this.setAuthor(s.getAuthor());
        this.setPublicationYear(s.getPublicationYear());
        this.setPublisher(s.getPublisher());
        this.setDoi(s.getDoi());
        this.setUrl(s.getUrl());
        this.setPageNumber(s.getPageNumber());
        this.setActive(s.getActive());
    }

    public void save() {
    }

    protected void throwOnWrongEvent(ReferenceEvent event) {
        String stateEntityIdArticleId = this.getArticleReferenceId().getArticleId();
        String eventEntityIdArticleId = ((ReferenceEvent.SqlReferenceEvent)event).getReferenceEventId().getArticleId();
        if (!stateEntityIdArticleId.equals(eventEntityIdArticleId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id ArticleId %1$s in state but entity id ArticleId %2$s in event", stateEntityIdArticleId, eventEntityIdArticleId);
        }

        BigInteger stateEntityIdReferenceNumber = this.getArticleReferenceId().getReferenceNumber();
        BigInteger eventEntityIdReferenceNumber = ((ReferenceEvent.SqlReferenceEvent)event).getReferenceEventId().getReferenceNumber();
        if (!stateEntityIdReferenceNumber.equals(eventEntityIdReferenceNumber)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id ReferenceNumber %1$s in state but entity id ReferenceNumber %2$s in event", stateEntityIdReferenceNumber, eventEntityIdReferenceNumber);
        }


        if (getForReapplying()) { return; }

    }


    public static class SimpleReferenceState extends AbstractReferenceState {

        public SimpleReferenceState() {
        }

        public static SimpleReferenceState newForReapplying() {
            SimpleReferenceState s = new SimpleReferenceState();
            s.initializeForReapplying();
            return s;
        }

    }



}

