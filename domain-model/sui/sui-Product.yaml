aggregates:
  Product:
    #immutable: true # This `true` value needs to be ignored when generating the off-chain service.
    metadata:
      Preprocessors: ["MOVE_CRUD_IT"]
    id:
      name: ProductId
      type: String
      length: 20
      generator:
        class: sequence
        structName: ProductIdGenerator # Used to generate ProductId
    properties:
      Name:
        type: String
      UnitPrice:
        type: u128
      Owner:
        type: address

    methods:
      Create:
#        isCreationCommand: true
#        parameters:
#          Name:
#            type: String
#          UnitPrice:
#            type: u128
        event:
          #name: ProductCreated
          isObjectShared: true
          #isObjectFrozen: true # This is `true` when the Product is immutable.
          type: ProductCrudEvent
          discriminatorValue: 0

      Update:
        verificationLogic:
          Move:
            "assert!(sui::tx_context::sender(ctx) == product::owner(product), 111);"
        event:
          type: ProductCrudEvent
          discriminatorValue: 1

      Delete:
        event:
          type: ProductCrudEvent
          discriminatorValue: 2

    eventObjects:
      ProductCrudEvent:
        discriminator: CrudType
        properties:
          CrudType:
            type: u8
#          ProductId:
#            type: String
#            length: 20
#          Version:
#            type: u64
#          Name:
#            type: String
#          UnitPrice:
#            type: u128
