// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.suidemocontracts.domain.orderv2;

import java.util.*;
import java.math.*;
import java.util.Date;
import org.dddml.suidemocontracts.domain.*;
import org.dddml.suidemocontracts.specialization.*;
import org.dddml.suidemocontracts.domain.orderv2.OrderShipGroupEvent.*;

public abstract class AbstractOrderShipGroupState implements OrderShipGroupState.SqlOrderShipGroupState, Saveable {

    private OrderV2OrderShipGroupId orderV2OrderShipGroupId = new OrderV2OrderShipGroupId();

    public OrderV2OrderShipGroupId getOrderV2OrderShipGroupId() {
        return this.orderV2OrderShipGroupId;
    }

    public void setOrderV2OrderShipGroupId(OrderV2OrderShipGroupId orderV2OrderShipGroupId) {
        this.orderV2OrderShipGroupId = orderV2OrderShipGroupId;
    }

    private transient OrderV2State orderV2State;

    public OrderV2State getOrderV2State() {
        return orderV2State;
    }

    public void setOrderV2State(OrderV2State s) {
        orderV2State = s;
    }
    
    private OrderV2State protectedOrderV2State;

    protected OrderV2State getProtectedOrderV2State() {
        return protectedOrderV2State;
    }

    protected void setProtectedOrderV2State(OrderV2State protectedOrderV2State) {
        this.protectedOrderV2State = protectedOrderV2State;
    }

    public String getOrderV2OrderId() {
        return this.getOrderV2OrderShipGroupId().getOrderV2OrderId();
    }
        
    public void setOrderV2OrderId(String orderV2OrderId) {
        this.getOrderV2OrderShipGroupId().setOrderV2OrderId(orderV2OrderId);
    }

    public Integer getShipGroupSeqId() {
        return this.getOrderV2OrderShipGroupId().getShipGroupSeqId();
    }
        
    public void setShipGroupSeqId(Integer shipGroupSeqId) {
        this.getOrderV2OrderShipGroupId().setShipGroupSeqId(shipGroupSeqId);
    }

    private String shipmentMethod;

    public String getShipmentMethod() {
        return this.shipmentMethod;
    }

    public void setShipmentMethod(String shipmentMethod) {
        this.shipmentMethod = shipmentMethod;
    }

    private Long offChainVersion;

    public Long getOffChainVersion() {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion) {
        this.offChainVersion = offChainVersion;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private Date createdAt;

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private Date updatedAt;

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    private Boolean active;

    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    private Boolean deleted;

    public Boolean getDeleted() {
        return this.deleted;
    }

    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public boolean isStateUnsaved() {
        return this.getOffChainVersion() == null;
    }

    private Set<OrderItemShipGroupAssociationState> protectedOrderItemShipGroupAssociations = new HashSet<>();

    protected Set<OrderItemShipGroupAssociationState> getProtectedOrderItemShipGroupAssociations() {
        return this.protectedOrderItemShipGroupAssociations;
    }

    protected void setProtectedOrderItemShipGroupAssociations(Set<OrderItemShipGroupAssociationState> protectedOrderItemShipGroupAssociations) {
        this.protectedOrderItemShipGroupAssociations = protectedOrderItemShipGroupAssociations;
    }

    private EntityStateCollection<String, OrderItemShipGroupAssociationState> orderItemShipGroupAssociations;

    public EntityStateCollection<String, OrderItemShipGroupAssociationState> getOrderItemShipGroupAssociations() {
        return this.orderItemShipGroupAssociations;
    }

    public void setOrderItemShipGroupAssociations(EntityStateCollection<String, OrderItemShipGroupAssociationState> orderItemShipGroupAssociations) {
        this.orderItemShipGroupAssociations = orderItemShipGroupAssociations;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }


    public AbstractOrderShipGroupState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
        orderItemShipGroupAssociations = new SimpleOrderItemShipGroupAssociationStateCollection();
    }

    @Override
    public int hashCode() {
        return getShipGroupSeqId().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof OrderShipGroupState) {
            return Objects.equals(this.getShipGroupSeqId(), ((OrderShipGroupState)obj).getShipGroupSeqId());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (false) { 
            ;
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void merge(OrderShipGroupState s) {
        if (s == this) {
            return;
        }
        this.setShipmentMethod(s.getShipmentMethod());
        this.setActive(s.getActive());

        if (s.getOrderItemShipGroupAssociations() != null) {
            Iterable<OrderItemShipGroupAssociationState> iterable;
            if (s.getOrderItemShipGroupAssociations().isLazy()) {
                iterable = s.getOrderItemShipGroupAssociations().getLoadedStates();
            } else {
                iterable = s.getOrderItemShipGroupAssociations();
            }
            if (iterable != null) {
                for (OrderItemShipGroupAssociationState ss : iterable) {
                    OrderItemShipGroupAssociationState thisInnerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(ss.getProductId());
                    ((AbstractOrderItemShipGroupAssociationState) thisInnerState).merge(ss);
                }
            }
        }
        if (s.getOrderItemShipGroupAssociations() != null) {
            if (s.getOrderItemShipGroupAssociations() instanceof EntityStateCollection.RemovalLoggedEntityStateCollection) {
                if (((EntityStateCollection.RemovalLoggedEntityStateCollection)s.getOrderItemShipGroupAssociations()).getRemovedStates() != null) {
                    for (OrderItemShipGroupAssociationState ss : ((EntityStateCollection.RemovalLoggedEntityStateCollection<String, OrderItemShipGroupAssociationState>)s.getOrderItemShipGroupAssociations()).getRemovedStates()) {
                        OrderItemShipGroupAssociationState thisInnerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(ss.getProductId());
                        ((EntityStateCollection.ModifiableEntityStateCollection)this.getOrderItemShipGroupAssociations()).removeState(thisInnerState);
                    }
                }
            } else {
                if (s.getOrderItemShipGroupAssociations().isAllLoaded()) {
                    Set<String> removedStateIds = new HashSet<>(this.getOrderItemShipGroupAssociations().stream().map(i -> i.getProductId()).collect(java.util.stream.Collectors.toList()));
                    s.getOrderItemShipGroupAssociations().forEach(i -> removedStateIds.remove(i.getProductId()));
                    for (String i : removedStateIds) {
                        OrderItemShipGroupAssociationState thisInnerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(i);
                        ((EntityStateCollection.ModifiableEntityStateCollection)this.getOrderItemShipGroupAssociations()).removeState(thisInnerState);
                    }
                } else {
                    throw new UnsupportedOperationException();
                }
            }
        }
    }

    public void save() {
        if (orderItemShipGroupAssociations instanceof Saveable) {
            ((Saveable)orderItemShipGroupAssociations).save();
        }
    }

    protected void throwOnWrongEvent(OrderShipGroupEvent event) {
        String stateEntityIdOrderV2OrderId = this.getOrderV2OrderShipGroupId().getOrderV2OrderId();
        String eventEntityIdOrderV2OrderId = ((OrderShipGroupEvent.SqlOrderShipGroupEvent)event).getOrderShipGroupEventId().getOrderV2OrderId();
        if (!stateEntityIdOrderV2OrderId.equals(eventEntityIdOrderV2OrderId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id OrderV2OrderId %1$s in state but entity id OrderV2OrderId %2$s in event", stateEntityIdOrderV2OrderId, eventEntityIdOrderV2OrderId);
        }

        Integer stateEntityIdShipGroupSeqId = this.getOrderV2OrderShipGroupId().getShipGroupSeqId();
        Integer eventEntityIdShipGroupSeqId = ((OrderShipGroupEvent.SqlOrderShipGroupEvent)event).getOrderShipGroupEventId().getShipGroupSeqId();
        if (!stateEntityIdShipGroupSeqId.equals(eventEntityIdShipGroupSeqId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id ShipGroupSeqId %1$s in state but entity id ShipGroupSeqId %2$s in event", stateEntityIdShipGroupSeqId, eventEntityIdShipGroupSeqId);
        }


        if (getForReapplying()) { return; }

    }


    public static class SimpleOrderShipGroupState extends AbstractOrderShipGroupState {

        public SimpleOrderShipGroupState() {
        }

        public static SimpleOrderShipGroupState newForReapplying() {
            SimpleOrderShipGroupState s = new SimpleOrderShipGroupState();
            s.initializeForReapplying();
            return s;
        }

    }


    class SimpleOrderItemShipGroupAssociationStateCollection implements EntityStateCollection.ModifiableEntityStateCollection<String, OrderItemShipGroupAssociationState>, Collection<OrderItemShipGroupAssociationState> {

        @Override
        public OrderItemShipGroupAssociationState get(String productId) {
            return protectedOrderItemShipGroupAssociations.stream().filter(
                            e -> e.getProductId().equals(productId))
                    .findFirst().orElse(null);
        }

        @Override
        public boolean isLazy() {
            return false;
        }

        @Override
        public boolean isAllLoaded() {
            return true;
        }

        @Override
        public Collection<OrderItemShipGroupAssociationState> getLoadedStates() {
            return protectedOrderItemShipGroupAssociations;
        }

        @Override
        public OrderItemShipGroupAssociationState getOrAddDefault(String productId) {
            OrderItemShipGroupAssociationState s = get(productId);
            if (s == null) {
                OrderV2OrderItemShipGroupAssociationId globalId = new OrderV2OrderItemShipGroupAssociationId(getOrderV2OrderShipGroupId().getOrderV2OrderId(), getOrderV2OrderShipGroupId().getShipGroupSeqId(), productId);
                AbstractOrderItemShipGroupAssociationState state = new AbstractOrderItemShipGroupAssociationState.SimpleOrderItemShipGroupAssociationState();
                state.setOrderV2OrderItemShipGroupAssociationId(globalId);
                add(state);
                s = state;
            }
            return s;
        }

        @Override
        public int size() {
            return protectedOrderItemShipGroupAssociations.size();
        }

        @Override
        public boolean isEmpty() {
            return protectedOrderItemShipGroupAssociations.isEmpty();
        }

        @Override
        public boolean contains(Object o) {
            return protectedOrderItemShipGroupAssociations.contains(o);
        }

        @Override
        public Iterator<OrderItemShipGroupAssociationState> iterator() {
            return protectedOrderItemShipGroupAssociations.iterator();
        }

        @Override
        public java.util.stream.Stream<OrderItemShipGroupAssociationState> stream() {
            return protectedOrderItemShipGroupAssociations.stream();
        }

        @Override
        public Object[] toArray() {
            return protectedOrderItemShipGroupAssociations.toArray();
        }

        @Override
        public <T> T[] toArray(T[] a) {
            return protectedOrderItemShipGroupAssociations.toArray(a);
        }

        @Override
        public boolean add(OrderItemShipGroupAssociationState s) {
            if (s instanceof AbstractOrderItemShipGroupAssociationState) {
                AbstractOrderItemShipGroupAssociationState state = (AbstractOrderItemShipGroupAssociationState) s;
                state.setProtectedOrderShipGroupState(AbstractOrderShipGroupState.this);
            }
            return protectedOrderItemShipGroupAssociations.add(s);
        }

        @Override
        public boolean remove(Object o) {
            if (o instanceof AbstractOrderItemShipGroupAssociationState) {
                AbstractOrderItemShipGroupAssociationState s = (AbstractOrderItemShipGroupAssociationState) o;
                s.setProtectedOrderShipGroupState(null);
            }
            return protectedOrderItemShipGroupAssociations.remove(o);
        }

        @Override
        public boolean removeState(OrderItemShipGroupAssociationState s) {
            return remove(s);
        }

        @Override
        public boolean containsAll(Collection<?> c) {
            return protectedOrderItemShipGroupAssociations.contains(c);
        }

        @Override
        public boolean addAll(Collection<? extends OrderItemShipGroupAssociationState> c) {
            return protectedOrderItemShipGroupAssociations.addAll(c);
        }

        @Override
        public boolean removeAll(Collection<?> c) {
            return protectedOrderItemShipGroupAssociations.removeAll(c);
        }

        @Override
        public boolean retainAll(Collection<?> c) {
            return protectedOrderItemShipGroupAssociations.retainAll(c);
        }

        @Override
        public void clear() {
            protectedOrderItemShipGroupAssociations.clear();
        }
    }


}

