// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module aptos_demo::order_aggregate {
    use aptos_demo::order;
    use aptos_demo::order_create_logic;
    use aptos_demo::order_remove_item_logic;
    use aptos_demo::order_update_item_quantity_logic;
    use std::string::String;

    public entry fun create(
        account: &signer,
        order_id: String,
        product_id: String,
        quantity: u64,
    ) {
        let order_created = order_create_logic::verify(
            account,
            order_id,
            product_id,
            quantity,
        );
        let order = order_create_logic::mutate(
            &order_created,
        );
        order::add_order(order);
        order::emit_order_created(order_created);
    }


    public entry fun remove_item(
        account: &signer,
        order_id: String,
        product_id: String,
    ) {
        let order = order::remove_order(order_id);
        let order_item_removed = order_remove_item_logic::verify(
            account,
            product_id,
            &order,
        );
        let updated_order = order_remove_item_logic::mutate(
            &order_item_removed,
            order,
        );
        order::update_version_and_add(updated_order);
        order::emit_order_item_removed(order_item_removed);
    }


    public entry fun update_item_quantity(
        account: &signer,
        order_id: String,
        product_id: String,
        quantity: u64,
    ) {
        let order = order::remove_order(order_id);
        let order_item_quantity_updated = order_update_item_quantity_logic::verify(
            account,
            product_id,
            quantity,
            &order,
        );
        let updated_order = order_update_item_quantity_logic::mutate(
            &order_item_quantity_updated,
            order,
        );
        order::update_version_and_add(updated_order);
        order::emit_order_item_quantity_updated(order_item_quantity_updated);
    }

}
